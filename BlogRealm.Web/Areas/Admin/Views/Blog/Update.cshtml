@model BlogRealm.Web.Areas.Admin.DTO.BlogUpdateAdminDTO

<script>
    $(document).ready(function () {
        function pad(number, length) {
            let str = number.toString();
            while (str.length < length) {
                str = '0' + str;
            }
            return str;
        }

        const year = pad(@Model.Date.Year, 4);
        const month = pad(@Model.Date.Month, 2);
        const day = pad(@Model.Date.Day, 2);
        const hour = pad(@Model.Date.Hour, 2);
        const min = pad(@Model.Date.Minute, 2);

        document.getElementById("Date").value = `${year}-${month}-${day}T${hour}:${min}`;
    });
</script>

<!-- Modal -->
<div class="modal fade" id="updateBlogModal" tabindex="-1" role="dialog" aria-labelledby="updateBlogModalLabel" aria-hidden="true" data-bs-backdrop="static">
    <div class="modal-dialog modal-lg modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="updateBlogModalLabel">Edit: @Model.Title</h5>
                <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div>
                <div class="modal-body">

                    @using (Html.BeginForm("Update", "Blog", FormMethod.Post, new { @id = "updateBlogForm" }))
                    {
                        @Html.AntiForgeryToken()

                        @Html.HiddenFor(m => m.Id, new { id = "BlogId", name = "BlogId", value = Model.Id })

                        <div class="form-group">
                            @Html.LabelFor(m => m.Title, "Title")
                            @Html.TextBoxFor(m => m.Title, new { @class = "form-control", id = "Title", @type = "text", value = Model.Title, required = "required" })
                            @Html.ValidationMessageFor(m => m.Title)
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.Image, "Image Path")
                            @Html.TextBoxFor(m => m.Image, new { @class = "form-control", id = "ImagePath", @type = "text", value = Model.Image, required = "required" })
                            @Html.ValidationMessageFor(m => m.Image)
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.Date, "Date")
                            @Html.TextBoxFor(m => m.Date, new { @class = "form-control", id = "Date", @type = "datetime-local", required = "required" })
                            @Html.ValidationMessageFor(m => m.Date)
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.CategoryId, "Category")
                            <input type="text" class="form-control" id="Category" name="Category" value="@Model.Category.Name" required oninput="filterCategories()" autocomplete="off" />
                            @Html.HiddenFor(m => m.CategoryId, new { id = "CategoryId", name = "CategoryId", value = Model.CategoryId })
                            @Html.ValidationMessageFor(m => m.CategoryId)
                            <ul class="list-group" id="categoryList"></ul>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.AuthorId, "Author")
                            <input type="text" class="form-control" id="Author" name="Author" value="@Model.Author.Name" required oninput="filterAuthors()" autocomplete="off" />
                            @Html.HiddenFor(m => m.AuthorId, new { id = "AuthorId", name = "AuthorId", value = Model.AuthorId })
                            @Html.ValidationMessageFor(m => m.AuthorId)
                            <ul class="list-group" id="authorList"></ul>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.Content, "Content")
                            @Html.TextAreaFor(m => m.Content, new { @class = "form-control", rows = "4", value = Model.Content, required = "required" })
                            @Html.ValidationMessageFor(m => m.Content)
                        </div>
                        <button type="submit" class="btn btn-primary">Save</button>
                    }

                    <div id="updateModalResponseMessage" class="alert mt-3 d-none"></div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        $('#updateBlogForm').on('submit', function (e) {
            e.preventDefault();

            $.ajax({
                type: 'POST',
                url: $(this).attr('action'),
                data: $(this).serialize(),
                dataType: 'json',
                success: function (response) {
                    var messageClass = response.success ? 'alert-success' : 'alert-danger';
                    $('#updateModalResponseMessage').removeClass('alert-success alert-danger d-none').addClass(messageClass).text(response.message);

                    refresh = true;
                },
                error: function (xhr, status, error) {
                    $('#updateModalResponseMessage').removeClass('alert-success d-none').addClass('alert-danger').text('An error occurred: ' + error);
                }
            });
        });
    });
</script>